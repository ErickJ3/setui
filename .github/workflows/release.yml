name: Release
on:
  push:
    branches:
      - main
    tags:
      - "v*"

jobs:
  build-and-release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform:
          - ubuntu-latest
          - windows-latest
          - macos-latest

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Rust (Stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf \
          libsoup-3.0-dev libjavascriptcoregtk-4.1-dev libsoup-3.0-0 webkit2gtk-4.1-dev

      - name: Install frontend dependencies
        run: pnpm install

      - name: Generate version
        if: startsWith(github.ref, 'refs/heads/')
        run: echo "VERSION=$(date +'%Y%m%d%H%M')" >> $GITHUB_ENV

      - name: Set version from tag
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v${{ env.VERSION }}
          releaseName: "Setui v${{ env.VERSION }}"
          releaseBody: "Auto release from ${{ github.ref_name }}"
          releaseDraft: false
          prerelease: ${{ !startsWith(github.ref, 'refs/tags/') }}
